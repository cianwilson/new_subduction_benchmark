<?xml version='1.0' encoding='utf-8'?>
<terraferma_options>
  <geometry>
    <dimension>
      <integer_value rank="0">2</integer_value>
    </dimension>
    <mesh name="Mesh">
      <source name="File">
        <file>
          <string_value type="filename" lines="1">transfinite_square</string_value>
        </file>
        <cell>
          <string_value lines="1">triangle</string_value>
        </cell>
      </source>
    </mesh>
  </geometry>
  <io>
    <output_base_name>
      <string_value lines="1">rbconvection</string_value>
    </output_base_name>
    <visualization>
      <element name="P1">
        <family>
          <string_value lines="1">CG</string_value>
        </family>
        <degree>
          <integer_value rank="0">1</integer_value>
        </degree>
      </element>
    </visualization>
    <dump_periods>
      <visualization_period>
        <real_value rank="0">1.e4</real_value>
      </visualization_period>
      <detectors_period>
        <real_value rank="0">1.e4</real_value>
      </detectors_period>
    </dump_periods>
    <detectors>
      <array name="HorizontalArray">
        <python>
          <string_value type="code" language="python3" lines="20">def val():
  from numpy import arange
  loc = [[x, 1.0] for x in arange(0.0,1.0+1./1000.,1./1000.)]
  return loc</string_value>
        </python>
      </array>
      <array name="VerticalArray">
        <python>
          <string_value type="code" language="python3" lines="20">def val():
  from numpy import arange
  loc = [[0.5, y] for y in arange(0.0,1.0+1./1000.,1./1000.)]
  return loc</string_value>
        </python>
      </array>
    </detectors>
    <checkpointing>
      <checkpoint_period>
        <real_value rank="0">2.e5</real_value>
      </checkpoint_period>
    </checkpointing>
  </io>
  <nonlinear_systems>
    <relative_error>
      <real_value rank="0">1.e-9</real_value>
    </relative_error>
    <max_iterations>
      <integer_value rank="0">100</integer_value>
    </max_iterations>
    <relaxation_parameter>
      <real_value rank="0">0.8</real_value>
    </relaxation_parameter>
    <monitors>
      <visualization/>
    </monitors>
    <never_ignore_convergence_failures/>
  </nonlinear_systems>
  <global_parameters>
    <ufl>
      <string_value type="code" language="python3" lines="20">recRa = 1./Ra

b = ln(1000.0)
eta = exp(-b*T_i)</string_value>
    </ufl>
    <dolfin>
      <ghost_mode name="shared_facet"/>
    </dolfin>
  </global_parameters>
  <system name="Stokes">
    <mesh name="Mesh"/>
    <ufl_symbol name="global">
      <string_value lines="1">us</string_value>
    </ufl_symbol>
    <field name="Velocity">
      <ufl_symbol name="global">
        <string_value lines="1">v</string_value>
      </ufl_symbol>
      <type name="Function">
        <rank name="Vector" rank="1">
          <element name="P2">
            <family>
              <string_value lines="1">CG</string_value>
            </family>
            <degree>
              <integer_value rank="0">2</integer_value>
            </degree>
          </element>
          <initial_condition name="WholeMesh" type="initial_condition">
            <constant name="dim">
              <real_value rank="1" dim1="dim" shape="2">0.0 0.0</real_value>
            </constant>
          </initial_condition>
          <boundary_condition name="LeftX">
            <boundary_ids>
              <integer_value rank="1" shape="1">1</integer_value>
            </boundary_ids>
            <sub_components name="X">
              <components>
                <integer_value rank="1" shape="1">0</integer_value>
              </components>
              <type name="Dirichlet" type="boundary_condition">
                <constant>
                  <real_value rank="0">0</real_value>
                </constant>
              </type>
            </sub_components>
          </boundary_condition>
          <boundary_condition name="RightX">
            <boundary_ids>
              <integer_value rank="1" shape="1">2</integer_value>
            </boundary_ids>
            <sub_components name="X">
              <components>
                <integer_value rank="1" shape="1">0</integer_value>
              </components>
              <type name="Dirichlet" type="boundary_condition">
                <constant>
                  <real_value rank="0">0</real_value>
                </constant>
              </type>
            </sub_components>
          </boundary_condition>
          <boundary_condition name="BottomY">
            <boundary_ids>
              <integer_value rank="1" shape="1">3</integer_value>
            </boundary_ids>
            <sub_components name="Y">
              <components>
                <integer_value rank="1" shape="1">1</integer_value>
              </components>
              <type name="Dirichlet" type="boundary_condition">
                <constant>
                  <real_value rank="0">0</real_value>
                </constant>
              </type>
            </sub_components>
          </boundary_condition>
          <boundary_condition name="TopY">
            <boundary_ids>
              <integer_value rank="1" shape="1">4</integer_value>
            </boundary_ids>
            <sub_components name="Y">
              <components>
                <integer_value rank="1" shape="1">1</integer_value>
              </components>
              <type name="Dirichlet" type="boundary_condition">
                <constant>
                  <real_value rank="0">0</real_value>
                </constant>
              </type>
            </sub_components>
          </boundary_condition>
        </rank>
      </type>
      <diagnostics>
        <include_in_visualization/>
        <include_in_statistics/>
        <include_in_steady_state>
          <norm>
            <string_value lines="1">linf</string_value>
          </norm>
        </include_in_steady_state>
        <include_in_detectors/>
      </diagnostics>
    </field>
    <field name="Pressure">
      <ufl_symbol name="global">
        <string_value lines="1">p</string_value>
      </ufl_symbol>
      <type name="Function">
        <rank name="Scalar" rank="0">
          <element name="P1">
            <family>
              <string_value lines="1">CG</string_value>
            </family>
            <degree>
              <integer_value rank="0">1</integer_value>
            </degree>
          </element>
          <initial_condition name="WholeMesh" type="initial_condition">
            <constant>
              <real_value rank="0">0.0</real_value>
            </constant>
          </initial_condition>
          <reference_point name="Point">
            <coordinates>
              <real_value rank="1" dim1="dim" shape="2">0.0 0.0</real_value>
            </coordinates>
          </reference_point>
        </rank>
      </type>
      <diagnostics>
        <include_in_statistics/>
        <include_in_steady_state>
          <norm>
            <string_value lines="1">linf</string_value>
          </norm>
        </include_in_steady_state>
        <include_in_detectors/>
      </diagnostics>
    </field>
    <coefficient name="RayleighNumber">
      <ufl_symbol name="global">
        <string_value lines="1">Ra</string_value>
      </ufl_symbol>
      <type name="Constant">
        <rank name="Scalar" rank="0">
          <value name="WholeMesh" type="value">
            <constant>
              <real_value rank="0">5.e5</real_value>
            </constant>
          </value>
        </rank>
      </type>
      <diagnostics/>
    </coefficient>
    <coefficient name="Gravity">
      <ufl_symbol name="global">
        <string_value lines="1">gravity</string_value>
      </ufl_symbol>
      <type name="Constant">
        <rank name="Vector" rank="1">
          <value name="WholeMesh" type="value">
            <constant name="dim">
              <real_value rank="1" dim1="dim" shape="2">0.0 -1.0</real_value>
            </constant>
          </value>
        </rank>
      </type>
      <diagnostics/>
    </coefficient>
    <nonlinear_solver name="Solver">
      <type name="SNES">
        <form name="Residual" rank="0">
          <string_value type="code" language="python3" lines="20">rv = (inner(sym(grad(v_t)), 2*eta*sym(grad(v_i))) - div(v_t)*p_i \
      + inner(v_t, gravity)*T_i \
     )*dx
rp = p_t*div(v_i)*dx

r = rv + rp</string_value>
          <comment>No viscosity!</comment>
          <ufl_symbol name="solver">
            <string_value lines="1">r</string_value>
          </ufl_symbol>
        </form>
        <form name="Jacobian" rank="1">
          <string_value type="code" language="python3" lines="20">a = derivative(r, us_i, us_a)</string_value>
          <ufl_symbol name="solver">
            <string_value lines="1">a</string_value>
          </ufl_symbol>
        </form>
        <form_representation name="quadrature"/>
        <quadrature_rule name="default"/>
        <snes_type name="ls">
          <ls_type name="cubic"/>
          <convergence_test name="default"/>
        </snes_type>
        <relative_error>
          <real_value rank="0">1.e-1</real_value>
        </relative_error>
        <absolute_error>
          <real_value rank="0">1e-16</real_value>
        </absolute_error>
        <max_iterations>
          <integer_value rank="0">1</integer_value>
        </max_iterations>
        <monitors>
          <residual/>
          <visualization/>
        </monitors>
        <linear_solver>
          <iterative_method name="preonly"/>
          <preconditioner name="lu">
            <factorization_package name="mumps"/>
          </preconditioner>
        </linear_solver>
        <never_ignore_solver_failures/>
      </type>
      <solve name="in_timeloop"/>
    </nonlinear_solver>
    <functional name="VelocityL2NormSquared">
      <string_value type="code" language="python3" lines="20">int = inner(v,v)*dx</string_value>
      <ufl_symbol name="functional">
        <string_value lines="1">int</string_value>
      </ufl_symbol>
      <form_representation name="quadrature"/>
      <quadrature_rule name="default"/>
      <include_in_statistics/>
    </functional>
    <functional name="VelocityTopSurfaceIntegral">
      <string_value type="code" language="python3" lines="20">int = abs(v[0])*ds(4)</string_value>
      <ufl_symbol name="functional">
        <string_value lines="1">int</string_value>
      </ufl_symbol>
      <form_representation name="quadrature"/>
      <quadrature_rule name="default"/>
      <include_in_statistics/>
    </functional>
    <functional name="PressureIntegral">
      <string_value type="code" language="python3" lines="20">int = p*dx</string_value>
      <ufl_symbol name="functional">
        <string_value lines="1">int</string_value>
      </ufl_symbol>
      <form_representation name="quadrature"/>
      <quadrature_rule name="default"/>
      <include_in_statistics/>
    </functional>
    <functional name="TemperatureTopSurfaceIntegral">
      <string_value type="code" language="python3" lines="20">int = T.dx(1)*ds(4)</string_value>
      <ufl_symbol name="functional">
        <string_value lines="1">int</string_value>
      </ufl_symbol>
      <form_representation name="quadrature"/>
      <quadrature_rule name="default"/>
      <include_in_statistics/>
    </functional>
    <functional name="TemperatureBottomSurfaceIntegral">
      <string_value type="code" language="python3" lines="20">int = T.dx(1)*ds(3)</string_value>
      <ufl_symbol name="functional">
        <string_value lines="1">int</string_value>
      </ufl_symbol>
      <form_representation name="quadrature"/>
      <quadrature_rule name="default"/>
      <include_in_statistics/>
    </functional>
    <functional name="TemperatureIntegral">
      <string_value type="code" language="python3" lines="20">int = T*dx</string_value>
      <ufl_symbol name="functional">
        <string_value lines="1">int</string_value>
      </ufl_symbol>
      <form_representation name="quadrature"/>
      <quadrature_rule name="default"/>
      <include_in_statistics/>
    </functional>
  </system>
  <system name="Temperature">
    <mesh name="Mesh"/>
    <ufl_symbol name="global">
      <string_value lines="1">uT</string_value>
    </ufl_symbol>
    <field name="Temperature">
      <ufl_symbol name="global">
        <string_value lines="1">T</string_value>
      </ufl_symbol>
      <type name="Function">
        <rank name="Scalar" rank="0">
          <element name="P2">
            <family>
              <string_value lines="1">CG</string_value>
            </family>
            <degree>
              <integer_value rank="0">2</integer_value>
            </degree>
          </element>
          <initial_condition name="WholeMesh" type="initial_condition">
            <cpp rank="0">
              <members>
                <string_value type="code" language="cpp" lines="20">double range;
int power;

double cos_taper_uu(const double &amp;x) const
{
  return std::pow(std::cos(0.5*M_PI*x), power) + std::pow(std::cos(0.5*M_PI*(1+x)), power);
}

double cos_taper_ud(const double &amp;x) const
{
  return std::pow(std::cos(0.5*M_PI*x), power) - std::pow(std::cos(0.5*M_PI*(1+x)), power);
}</string_value>
              </members>
              <initialization>
                <string_value type="code" language="cpp" lines="20">power = 200;
range = 1.0;</string_value>
              </initialization>
              <eval>
                <string_value type="code" language="cpp" lines="20">double xtaper = cos_taper_ud(x[0])*(1.0-cos_taper_uu(x[1]));
double ytaper = cos_taper_ud(x[1])*(1.0-cos_taper_uu(x[0]));
double corner = cos_taper_ud(x[1])*cos_taper_uu(x[0]);

values[0] = 0.5*range*(xtaper + ytaper + corner + 1.0);</string_value>
              </eval>
            </cpp>
          </initial_condition>
          <boundary_condition name="Top">
            <boundary_ids>
              <integer_value rank="1" shape="1">4</integer_value>
            </boundary_ids>
            <sub_components name="All">
              <type name="Dirichlet" type="boundary_condition">
                <constant>
                  <real_value rank="0">0.0</real_value>
                </constant>
              </type>
            </sub_components>
          </boundary_condition>
          <boundary_condition name="Bottom">
            <boundary_ids>
              <integer_value rank="1" shape="1">3</integer_value>
            </boundary_ids>
            <sub_components name="All">
              <type name="Dirichlet" type="boundary_condition">
                <constant>
                  <real_value rank="0">1.0</real_value>
                </constant>
              </type>
            </sub_components>
          </boundary_condition>
        </rank>
      </type>
      <diagnostics>
        <include_in_visualization/>
        <include_in_statistics/>
        <include_in_steady_state>
          <norm>
            <string_value lines="1">linf</string_value>
          </norm>
        </include_in_steady_state>
        <include_in_detectors/>
      </diagnostics>
    </field>
    <nonlinear_solver name="Solver">
      <type name="SNES">
        <form name="Residual" rank="0">
          <string_value type="code" language="python3" lines="20">r = (T_t*inner(v_i, grad(T_i)) \
     + recRa*inner(grad(T_t), grad(T_i)) \
    )*dx</string_value>
          <comment>No viscosity!</comment>
          <ufl_symbol name="solver">
            <string_value lines="1">r</string_value>
          </ufl_symbol>
        </form>
        <form name="Jacobian" rank="1">
          <string_value type="code" language="python3" lines="20">a = derivative(r, uT_i, uT_a)</string_value>
          <ufl_symbol name="solver">
            <string_value lines="1">a</string_value>
          </ufl_symbol>
        </form>
        <form_representation name="quadrature"/>
        <quadrature_rule name="default"/>
        <snes_type name="ls">
          <ls_type name="cubic"/>
          <convergence_test name="default"/>
        </snes_type>
        <relative_error>
          <real_value rank="0">1.e-1</real_value>
        </relative_error>
        <absolute_error>
          <real_value rank="0">1e-16</real_value>
        </absolute_error>
        <max_iterations>
          <integer_value rank="0">1</integer_value>
        </max_iterations>
        <monitors>
          <residual/>
          <visualization/>
        </monitors>
        <linear_solver>
          <iterative_method name="preonly"/>
          <preconditioner name="lu">
            <factorization_package name="mumps"/>
          </preconditioner>
        </linear_solver>
        <never_ignore_solver_failures/>
      </type>
      <solve name="in_timeloop"/>
    </nonlinear_solver>
  </system>
  <system name="Projection">
    <mesh name="Mesh"/>
    <ufl_symbol name="global">
      <string_value lines="1">up</string_value>
    </ufl_symbol>
    <field name="TemperatureGradient">
      <ufl_symbol name="global">
        <string_value lines="1">dTdz</string_value>
      </ufl_symbol>
      <type name="Function">
        <rank name="Scalar" rank="0">
          <element name="P1DG">
            <family>
              <string_value lines="1">DG</string_value>
            </family>
            <degree>
              <integer_value rank="0">1</integer_value>
            </degree>
          </element>
        </rank>
      </type>
      <diagnostics>
        <include_in_visualization/>
        <include_in_statistics/>
        <include_in_detectors/>
      </diagnostics>
    </field>
    <nonlinear_solver name="Solver">
      <type name="SNES">
        <form name="Residual" rank="0">
          <string_value type="code" language="python3" lines="20">r = dTdz_t*(dTdz_i - T.dx(1))*dx</string_value>
          <ufl_symbol name="solver">
            <string_value lines="1">r</string_value>
          </ufl_symbol>
        </form>
        <form name="Jacobian" rank="1">
          <string_value type="code" language="python3" lines="20">J = derivative(r, up_i, up_a)</string_value>
          <ufl_symbol name="solver">
            <string_value lines="1">J</string_value>
          </ufl_symbol>
        </form>
        <form_representation name="quadrature"/>
        <quadrature_rule name="default"/>
        <snes_type name="ls">
          <ls_type name="cubic"/>
          <convergence_test name="default"/>
        </snes_type>
        <relative_error>
          <real_value rank="0">1.e-6</real_value>
        </relative_error>
        <max_iterations>
          <integer_value rank="0">1</integer_value>
        </max_iterations>
        <monitors/>
        <linear_solver>
          <iterative_method name="preonly"/>
          <preconditioner name="lu">
            <factorization_package name="mumps"/>
          </preconditioner>
        </linear_solver>
        <never_ignore_solver_failures/>
      </type>
      <solve name="with_diagnostics"/>
    </nonlinear_solver>
  </system>
</terraferma_options>
